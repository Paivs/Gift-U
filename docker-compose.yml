services:
  frontend:
    image: node
    container_name: frontend
    working_dir: /frontend
    volumes:
      - ./frontend/:/frontend
    ports:
      - "3000:3000"
    command: sh -c "npm install && npm run build && npm start"
    networks:
      - app_network

  # backend:
  #   image: node:18
  #   container_name: backend
  #   working_dir: /backend
  #   volumes:
  #     - ./backend/:/backend
  #     # - /backend/node_modules
  #   ports:
  #     - "4000:4000"
  #   command: sh -c "npm run docker"
  #   depends_on:
  #     mongo:
  #       condition: service_healthy
      
  # proxy:
  #   image: nginx
  #   container_name: proxy
  #   ports:
  #     - "8080:80"
  #   volumes:
  #     # - ./infra/nginx/default:/etc/nginx/sites-available/default
  #     - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - frontend
  #   networks:
  #     - app_network

#   mongo:
#     image: mongo
#     container_name: mongo
#     restart: always
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: dev
#       MONGO_INITDB_ROOT_PASSWORD: dev@123
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo_data:/data/db
#     healthcheck:
#       test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
#       interval: 10s
#       retries: 5
#       start_period: 10s

# volumes:
#   mongo_data:

networks:
  app_network:
    driver: bridge